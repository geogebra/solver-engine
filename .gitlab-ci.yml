default:
  image: gradle:jdk19-alpine

variables:
  GITLAB_CLUSTER: solver-v2
  GGBTRANS_SOLVER_IMPORT_URL: https://dev.geogebra.org/ggbtrans/props/api/solver_import
  GRADLE: './gradlew --no-daemon --stacktrace --build-cache --gradle-user-home cache/.gradle'

stages:
  - checks
  - build
  - publish
  - deploy

before_script:
  - export SLUG=`echo $CI_COMMIT_REF_SLUG | sed 's/^\([a-z][a-z]*\-[0-9][0-9]*\).*/\1/'`
  - export REPO_FULL_NAME=`echo $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME`
  - export REPOSITORY_ID=4 # The gitlab ID of the repository where our container images are uploaded

cache:
  key:
    files:
      - gradle/wrapper/gradle-wrapper.properties
  paths:
    - cache/.gradle/wrapper
    - cache/.gradle/caches
    - cache/.gradle/notifications

check-circular-dependencies-in-methods:
  stage: checks
  cache: []
  script:
    - ./scripts/check_method_dependencies.sh

code_style_prettier:
  stage: checks
  cache: []
  image: node:19-alpine
  tags:
    - docker
  script:
    - npm install
    - npm exec -c "prettier . -c"

# The gradle 'build' includes running detekt, ktlint, runnings tests.
build:
  stage: build
  needs: []
  tags:
    - docker
  script:
    - $GRADLE build
  artifacts:
    paths:
      - build/reports/ktlint
      - build/reports/detekt
      - methods/build/generated/ksp/main/resources/TranslationKeys.json
      - methods/build/generated/ksp/main/resources/Method.TranslationKeys.json
      - engine/build/generated/ksp/main/resources/TranslationKeys.json
    expire_in: 1 day

package:
  stage: publish
  needs:
    - build
  tags:
    - docker
  script:
    - $GRADLE bootBuildImage --imageName="registry.git.geogebra.org/solver-team/solver-engine/api:$SLUG"

export-translation-keys:
  stage: publish
  needs:
    - build
  image: curlimages/curl
  tags:
    - docker
  cache: []
  script:
    # Translation keys from the methods module (most keys)
    - |
      curl -X POST "$GGBTRANS_SOLVER_IMPORT_URL/?override_test=1" \
        --fail-with-body \
        --header "X-Token: $GGBTRANS_API_TOKEN" \
        --data @methods/build/generated/ksp/main/resources/TranslationKeys.json
    # Public method titles
    - |
      curl -X POST "$GGBTRANS_SOLVER_IMPORT_URL/?override_test=1" \
        --fail-with-body \
        --header "X-Token: $GGBTRANS_API_TOKEN" \
        --data @methods/build/generated/ksp/main/resources/Method.TranslationKeys.json
    # Generic translation keys from the engine module
    - |
      curl -X POST "$GGBTRANS_SOLVER_IMPORT_URL/?override_test=1" \
        --fail-with-body \
        --header "X-Token: $GGBTRANS_API_TOKEN" \
        --data @engine/build/generated/ksp/main/resources/TranslationKeys.json
  when: manual

deploy:
  stage: deploy
  needs:
    - package
  image: alpine/k8s:1.23.7
  environment:
    name: solver/$CI_COMMIT_REF_SLUG
    url: $DYNAMIC_ENVIRONMENT_URL
    on_stop: undeploy
  tags:
    - docker
  cache: []
  artifacts:
    reports:
      dotenv: deploy.env
  script:
    - kubectl config get-contexts
    - kubectl config use-context $REPO_FULL_NAME:$GITLAB_CLUSTER
    - helm package helm/ --version "6.6.6"
    - |
      helm upgrade --install $SLUG solver-6.6.6.tgz \
          --set branchName=$SLUG \
          --set commitSha=$CI_COMMIT_SHA \
          --set imageCredentials.username=$CI_REGISTRY_USER \
          --set imageCredentials.password=$CI_REGISTRY_PASSWORD \
          --set springProfile=production
    - echo "DYNAMIC_ENVIRONMENT_URL=https://solver.geogebra.net/$SLUG/poker.html" >> deploy.env

# Remove kubernetes deployment.  This job is automatically triggered when the feature branch is deleted.
undeploy:
  stage: deploy
  dependencies: []
  image: alpine/k8s:1.23.7
  variables:
    # As the branch is deleted at this point we can't fetch the repo (and we don't need to)
    GIT_STRATEGY: none
  environment:
    name: solver/$CI_COMMIT_REF_SLUG
    action: stop
  tags:
    - docker
  cache: []
  script:
    - echo "Attempting do delete tag $SLUG..."
    # Call the gitlab API to delete the image tag as it is no longer needed. This will allow the image
    # to be garbage-collected, saving space on the container registry.
    - |
      curl --request DELETE \
           --header "PRIVATE-TOKEN: $GITLAB_API_PRIVATE_TOKEN" \
           "$CI_API_V4_URL/projects/$CI_PROJECT_ID/registry/repositories/$REPOSITORY_ID/tags/$SLUG"
    - kubectl config get-contexts
    - kubectl config use-context $REPO_FULL_NAME:$GITLAB_CLUSTER
    - helm uninstall $SLUG
  when: manual
  except:
    - main
