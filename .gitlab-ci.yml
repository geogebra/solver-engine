default:
  image: gradle:jdk17-alpine

variables:
  HOSTED_ZONE_ELB: "Z2IFOLAFXWLO4F" # for .elb.eu-west-1.amazonaws.com
  HOSTED_ZONE_PRIVATE: "Z07386271714PMB4T58VC" # private geogebra.net
  HOSTED_ZONE_PUBLIC: "Z3ODPVF4F5ZU2W" # public geogebra.net

stages:
  - assemble
  - lint
  - publish
  - deploy
  - undeploy

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - export SLUG=`echo $CI_COMMIT_REF_SLUG | sed 's/^\([a-z][a-z]*\-[0-9][0-9]*\).*/\1/'`

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

assemble:
  stage: assemble
  tags:
    - docker
  script:
    - ./gradlew assemble
    - ./gradlew test --stacktrace

code_style:
  stage: lint
  tags:
    - docker
  script:
    - ./gradlew ktlintCheck
  artifacts:
    paths:
      - build/reports/ktlint
    expire_in: 1 day

static_analysis:
  stage: lint
  tags:
    - docker
  script:
    - ./gradlew detekt
  artifacts:
    paths:
      - build/reports/detekt
    expire_in: 1 day
  allow_failure: true

package:
  stage: publish
  tags:
    - docker
  script:
    - ./gradlew bootBuildImage --imageName="registry.git.geogebra.org/solver-team/solver-engine/api:$SLUG"

deploy:
  stage: deploy
  image: alpine/k8s:1.22.10
  tags:
    - docker
  script:
    # AWS credentials are defined in https://git.geogebra.org/solver-team/solver-engine/-/settings/ci_cd
    - export NS="solver-$SLUG"
    - kubectl config use-context solver-team/solver-engine:eks-solver
    # Create fargate profile if necessary
    - eksctl get fargateprofile --cluster solver --name "fp-$SLUG" || eksctl create fargateprofile --cluster solver --name "fp-$SLUG" --namespace "$NS"
    # Deploy package
    - helm package helm --version "6.6.6"
    - |
      helm upgrade --install solver ./solver-6.6.6.tgz \
          --values helm/values.yaml \
          --set image.tag=$SLUG \
          --set podAnnotations.solver/commit-sha=$CI_COMMIT_SHA \
          --namespace $NS --create-namespace --wait
    # Create DNS entries
    - export ELB=$(kubectl get svc --namespace $NS solver --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
    - |
      export CHANGES="{\"Changes\": [ { \"Action\": \"UPSERT\", \"ResourceRecordSet\": { 
        \"Name\": \"$NS.geogebra.net\", \"Type\": \"A\", 
        \"AliasTarget\": { \"HostedZoneId\": \"$HOSTED_ZONE_ELB\",\"DNSName\": \"$ELB\",\"EvaluateTargetHealth\": false } 
      } } ] }"
    - aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/$HOSTED_ZONE_PRIVATE --change-batch "$CHANGES"
    - aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/$HOSTED_ZONE_PUBLIC --change-batch "$CHANGES"

undeploy:
  stage: undeploy
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  image: alpine/k8s:1.22.10
  tags:
    - docker
  script:
    - export NS="solver-$SLUG"
    - kubectl config use-context solver-team/solver-engine:eks-solver
    # Remove DNS entries
    - export ELB=$(kubectl get svc --namespace $NS solver --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")
    - |
      export CHANGES="{\"Changes\": [ { \"Action\": \"DELETE\", \"ResourceRecordSet\": { 
        \"Name\": \"$NS.geogebra.net\", \"Type\": \"A\", 
        \"AliasTarget\": { \"HostedZoneId\": \"$HOSTED_ZONE_ELB\",\"DNSName\": \"$ELB\",\"EvaluateTargetHealth\": false } 
      } } ] }"
    - aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/$HOSTED_ZONE_PRIVATE --change-batch "$CHANGES"
    - aws route53 change-resource-record-sets --hosted-zone-id /hostedzone/$HOSTED_ZONE_PUBLIC --change-batch "$CHANGES"
    # Undeploy
    - helm uninstall solver --namespace $NS --wait
    - kubectl delete namespaces $NS
    # Remove fargate profile
    - eksctl delete fargateprofile --cluster solver --name "fp-$SLUG"